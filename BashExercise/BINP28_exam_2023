import pandas as pd
from datetime import datetime

# Define the datasets
births_data = {
    'Patient ID': [12412, 41234, 32414, 35457, 87842],
    'State': ['MD', 'TX', 'TX', 'MD', 'UT'],
    'Gender': ['M', 'M', 'F', 'F', 'F'],
    'DOB': ['1/1/2001', '1/5/2002', '2/4/2002', '22/8/2001', '25/7/2022']
}

symptoms_data = {
    'Patient ID': [41234, 87842, 35457],
    'Diagnosis': ['Autism', 'Autism', 'Asthma']
}

air_quality_data = {
    'Date': ['1/1/2001', '1/2/2001', '1/3/2001'],
    'Air quality': [6, 4, 7]
}

# Create dataframes
births_df = pd.DataFrame(births_data)
symptoms_df = pd.DataFrame(symptoms_data)
air_quality_df = pd.DataFrame(air_quality_data)

# Convert DOB and Date to datetime objects
births_df['DOB'] = pd.to_datetime(births_df['DOB'], format='%d/%m/%Y')
air_quality_df['Date'] = pd.to_datetime(air_quality_df['Date'], format='%d/%m/%Y')

# Merge the datasets on 'Patient ID'
merged_df = pd.merge(births_df, symptoms_df, on='Patient ID', how='left')

# Filter the merged dataframe for male children with autism
autism_cases_df = merged_df[(merged_df['Gender'] == 'M') & (merged_df['Diagnosis'] == 'Autism')]

# Calculate the age at diagnosis for autism cases
autism_cases_df['Age at Diagnosis'] = (autism_cases_df['DOB'] - merged_df['DOB']).dt.days // 365

# Filter air quality data for dates relevant to autism diagnosis
relevant_air_quality_df = air_quality_df[air_quality_df['Date'] >= (autism_cases_df['DOB'].min() - pd.DateOffset(years=3))]

# Create datasets for cases and controls
cases_dataset = pd.merge(autism_cases_df, relevant_air_quality_df, how='left', left_on='DOB', right_on='Date')

# Assuming controls are children without autism, and we want to match the number of controls to the number of cases
controls_dataset = merged_df[(merged_df['Gender'] == 'M') & (merged_df['Diagnosis'].isna())].sample(n=len(cases_dataset))

# Display the datasets
print("Cases Dataset:")
print(cases_dataset[['Patient ID', 'State', 'Gender', 'DOB', 'Diagnosis', 'Air quality']])
print("\nControls Dataset:")
print(controls_dataset[['Patient ID', 'State', 'Gender', 'DOB', 'Diagnosis']])
